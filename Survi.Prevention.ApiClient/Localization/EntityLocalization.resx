<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlarmPanelType" xml:space="preserve">
    <value>Type de panneau d'alarme</value>
  </data>
  <data name="Building" xml:space="preserve">
    <value>Bâtiment</value>
  </data>
  <data name="BuildingAlarmPanel" xml:space="preserve">
    <value>Panneau d'alarme de bâtiment</value>
  </data>
  <data name="BuildingAnomaly" xml:space="preserve">
    <value>Anomalie de bâtiment</value>
  </data>
  <data name="BuildingAnomalyPicture" xml:space="preserve">
    <value>Images d'anomalie de bâtiment</value>
  </data>
  <data name="BuildingChildType" xml:space="preserve">
    <value>Type de bâtiment enfant</value>
  </data>
  <data name="BuildingContact" xml:space="preserve">
    <value>Contact de bâtiment</value>
  </data>
  <data name="BuildingCourse" xml:space="preserve">
    <value>Parcours</value>
  </data>
  <data name="BuildingCourseLane" xml:space="preserve">
    <value>Rue du parcours</value>
  </data>
  <data name="BuildingDetail" xml:space="preserve">
    <value>Détail de bâtiment</value>
  </data>
  <data name="BuildingFireHydrant" xml:space="preserve">
    <value>Borne de bâtiment</value>
  </data>
  <data name="BuildingHazardousMaterial" xml:space="preserve">
    <value>Matière dangeureuse de bâtiment</value>
  </data>
  <data name="BuildingParticularRisk" xml:space="preserve">
    <value>Risque particulier de bâtiment</value>
  </data>
  <data name="BuildingParticularRiskPicture" xml:space="preserve">
    <value>Image de risque particulier de bâtiment</value>
  </data>
  <data name="BuildingPersonRequiringAssistance" xml:space="preserve">
    <value>PNAP de bâtiment</value>
  </data>
  <data name="BuildingSprinkler" xml:space="preserve">
    <value>Gicleur de bâtiment</value>
  </data>
  <data name="BuildingType" xml:space="preserve">
    <value>Type de bâtiment</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Municipalité</value>
  </data>
  <data name="CityType" xml:space="preserve">
    <value>Type de municipalité</value>
  </data>
  <data name="ConstructionFireResistanceType" xml:space="preserve">
    <value>Type de résistance au feu (construction)</value>
  </data>
  <data name="ConstructionType" xml:space="preserve">
    <value>Type de construction</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Pays</value>
  </data>
  <data name="County" xml:space="preserve">
    <value>MRC</value>
  </data>
  <data name="CourseLaneDirection" xml:space="preserve">
    <value>Direction de rue</value>
  </data>
  <data name="FireHydrant" xml:space="preserve">
    <value>Borne incendie</value>
  </data>
  <data name="FireHydrantAddressLocationType" xml:space="preserve">
    <value>Type d'adresse de borne incendie</value>
  </data>
  <data name="FireHydrantConnection" xml:space="preserve">
    <value>Raccord de borne incendie</value>
  </data>
  <data name="FireHydrantConnectionType" xml:space="preserve">
    <value>Type de raccord de borne incendie</value>
  </data>
  <data name="FireHydrantLocationType" xml:space="preserve">
    <value>Type d'emplacement de borne incendie</value>
  </data>
  <data name="FireHydrantType" xml:space="preserve">
    <value>Type de borne d'incendie</value>
  </data>
  <data name="FireSafetyDepartment" xml:space="preserve">
    <value>Service incendie</value>
  </data>
  <data name="FireSafetyDepartmentCity" xml:space="preserve">
    <value>Desserte de service incendie</value>
  </data>
  <data name="FireSafetyDepartmentCityServing" xml:space="preserve">
    <value>Desserte de service incendie</value>
  </data>
  <data name="Firestation" xml:space="preserve">
    <value>Caserne </value>
  </data>
  <data name="GarageType" xml:space="preserve">
    <value>Type de garage</value>
  </data>
  <data name="HazardousMaterial" xml:space="preserve">
    <value>Matière dangereuse</value>
  </data>
  <data name="Lane" xml:space="preserve">
    <value>Rue</value>
  </data>
  <data name="LaneGenericCode" xml:space="preserve">
    <value>Code générique d'une rue</value>
  </data>
  <data name="LanePublicCode" xml:space="preserve">
    <value>Code public d'une rue</value>
  </data>
  <data name="MeasureType" xml:space="preserve">
    <value>Type de mesure</value>
  </data>
  <data name="OperatorType" xml:space="preserve">
    <value>Type d'opérateur</value>
  </data>
  <data name="ParticularRiskType" xml:space="preserve">
    <value>Type de risque particulier</value>
  </data>
  <data name="PersonRequiringAssistanceType" xml:space="preserve">
    <value>Type de PNAP</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Région administrative</value>
  </data>
  <data name="RiskLevel" xml:space="preserve">
    <value>Niveau de risque</value>
  </data>
  <data name="RoofMaterialType" xml:space="preserve">
    <value>Type de matériel de toiture</value>
  </data>
  <data name="RoofType" xml:space="preserve">
    <value>Type de toiture</value>
  </data>
  <data name="Sidingtype" xml:space="preserve">
    <value>Type de revêtement</value>
  </data>
  <data name="SprinklerType" xml:space="preserve">
    <value>Type de gicleur</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Province</value>
  </data>
  <data name="StorageTankType" xml:space="preserve">
    <value>Type de réservoir de stockage</value>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>Unité de mesure</value>
  </data>
  <data name="UtilisationCode" xml:space="preserve">
    <value>Code d'utilisation</value>
  </data>
  <data name="UtilizationCodeYear" xml:space="preserve">
    <value>Année du code d'utilisation</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Année </value>
  </data>
</root>